<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="label1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        TtvDDb7vTgAAAABJRU5ErkJggg==
</value>
  </data>
</root>